{"version":3,"sources":["webpack:///./src/components/example-page.js","webpack:///./src/components/post-layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/utility-helpers.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["addAppendButton","pre","key","codeBlock","firstChild","codeBlockClass","className","clickToCopy","document","createElement","setAttribute","innerHTML","insertBefore","ExampleLayout","componentDidMount","this","addClipboardButtons","componentDidUpdate","undefined","Array","from","ref","querySelectorAll","forEach","Clipboard","render","_this","_this$props","props","title","html","desc","category","date","formateddate","Date","toLocaleDateString","month","day","year","Object","core_browser_esm","node","gatsby_browser_entry","to","capitalize","react_markdown_default","a","source","dangerouslySetInnerHTML","__html","React","Component","Template","_ref","data","_data$markdownRemark","markdownRemark","frontmatter","react_default","Fragment","layout","isFrontPage","pageTitle","site","siteMetadata","description","slogan","siteTitle","example_page_ExampleLayout","tags","pageQuery","StaticQueryContext","createContext","StaticQuery","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","query","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","charAt","toUpperCase","slice","highlightMarkdown","markdown","searchString","replace","RegExp","trim","instance","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-components-post-layout-js-c25cc16334ac1fdd0bae.js","sourcesContent":["import React from 'react'\nimport Markdown from 'react-markdown'\nimport Clipboard from 'clipboard'\nimport { Link } from 'gatsby'\n\nimport {capitalize} from './utility-helpers'\nimport './code-styles.css'\n\nconst addAppendButton = (pre, key) => {\n  const codeBlock = pre.firstChild\n  const codeBlockClass = `example__code-${key}`\n  codeBlock.className += ` ${codeBlockClass}`\n\n  let clickToCopy = document.createElement ('button')\n  clickToCopy.setAttribute('class','click-to-copy-button')\n  clickToCopy.setAttribute('data-clipboard-target',`.${codeBlockClass}`)\n  clickToCopy.innerHTML = 'Copy'\n\n  pre.insertBefore(clickToCopy, codeBlock)\n}\n\nexport default class ExampleLayout extends React.Component {\n  componentDidMount(){\n    this.addClipboardButtons()\n  }\n\n  componentDidUpdate(){\n    this.addClipboardButtons()\n  }\n\n  addClipboardButtons (){\n    if (document === undefined) {\n      return null;\n    }\n    const codeBlocks = Array.from(this.ref.querySelectorAll('pre'))\n    codeBlocks.forEach(addAppendButton)\n    new Clipboard('[data-clipboard-target]')\n  }\n\n  render (){\n    const {title, html, desc, category, date} = this.props\n    const parsedDate = new Date(date)\n    const formateddate = parsedDate.toLocaleDateString('en-US',{month: 'short', day: 'numeric', year: 'numeric'})\n\n\n    return (\n\n    <section className=\"section section--padding-bottom-only section--tight\" ref={(node)=>this.ref = node} >\n      <div className=\"example--page\">\n        <div className=\"grid gutter-bottom--half\">\n          <div className=\"grid__item gutter-bottom--reset\">\n            <Link to=\"/\" className=\"example__return-link\">&#60; Browse library</Link>\n          </div>\n        </div>\n        <div className=\"grid\">\n          <div className=\"grid__item\">\n            <h1 className=\"heading--3 heading--inline\">{title}</h1>\n            <p className=\"example__date\">Last updated: {formateddate}</p>\n            <p className=\"gutter-bottom\"><Link to={`/?category=${category}`} className=\"category--link\" key={category}>\n              {capitalize(category)}\n            </Link>\n            </p>\n          </div>\n        </div>\n        <div className=\"grid\">\n          <div className=\"grid__item grid__item--tablet-up-three-quarters\">\n            <div className= \"example__desc\">\n              <Markdown source={desc} />\n            </div>\n\n            <div className=\"example__markdown gutter-bottom\" dangerouslySetInnerHTML={{ __html: html }} />\n            <p className=\"example__disclaimer\"><strong>Please note: </strong>We have intentionally limited CSS and JavaScript, and removed translation strings in order to keep these examples compatible with any theme. Any CSS we have included is for accessibility or rendering purposes.</p>\n          </div>\n        </div>\n      </div>\n    </section>\n    )\n  }\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from './layout'\nimport ExamplePage from './example-page'\n\nexport default function Template({ data }) {\n  const { markdownRemark: { frontmatter, html } } = data\n\n  return (\n    <>\n      <Layout isFrontPage={false} pageTitle={`${frontmatter.title} | ${data.site.siteMetadata.title}`} description={frontmatter.description}\n        slogan={data.site.siteMetadata.slogan} siteTitle={data.site.siteMetadata.title}>\n        <ExamplePage title={frontmatter.title} html={html} desc={frontmatter.desc} tags={frontmatter.tags} category={frontmatter.category} date={frontmatter.date}/>\n      </Layout>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        slogan\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        path\n        title\n        desc\n        tags\n        category\n        date\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export function capitalize (string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// Highlight keywords in post text\nexport function highlightMarkdown (markdown, searchString){\n  if(searchString) {\n    const newphrase = markdown.replace(new RegExp(searchString.trim(), 'gi'), function(instance){\n      return `~~${instance}~~`\n    })\n\n    return newphrase;\n  }\n\n  return markdown;\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}